input {
  # get alarm events from CorReactive (Comprehension module)
  redis {
     #host => "$IP"
     db => 1
     data_type => "list"
     key => "alarms"
     codec => "json"
  }

  # inputs from other hosts
  beats  {
     port => 5044
     include_codec_tag => false
     client_inactivity_timeout => 0

     ssl => true
     ssl_certificate => "/etc/logstash/ssl/elk.crt"
     ssl_key => "/etc/logstash/ssl/elk.key"
  }

  # input for devops events
  http  {
     port => 5046
     type => "devops-logs"
  }
  
  redis  {
     data_type => 'list'
     key => 'logstash:redis'
     threads => 4
  }
}

output {

  if [type] == "inventory" {
    elasticsearch {
      hosts => ["logs.domain.tld:9200"]
      index => "inventory"
      document_id => "%{identifier}"
    }
  } else {
    elasticsearch {
      hosts => ["logs.domain.tld:9200"]
      index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    }
  }

  if [type] == "firewall" {
    redis {
        host => "correactive.domain.tld"
        db => 0
        data_type => "list"
        batch => true
        batch_events=>500
        key => "events"
        codec => json
    }
  }

}
