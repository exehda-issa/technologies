filter {
    
    # grok log lines by program name (listed alpabetically)
    if [program] =~ /^postfix.*\/anvil$/ 
	{
       		 grok {
            		match          => [ "syslogmessage", "%{POSTFIX_ANVIL}" ]
            		tag_on_failure => [ "_grok_postfix_anvil_nomatch" ]
            		add_tag        => [ "mail" ]
        	      }
    	} 
	else if [program] =~ /^postfix.*\/bounce$/ 
	{
        	grok {
            		match          => [ "syslogmessage", "%{POSTFIX_BOUNCE}" ]
            		tag_on_failure => [ "_grok_postfix_bounce_nomatch" ]
            		add_tag        => [ "mail" ]
        	}
    	} 
	else if [program] =~ /^postfix.*\/cleanup$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_CLEANUP}" ]
            tag_on_failure => [ "_grok_postfix_cleanup_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/dnsblog$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_DNSBLOG}" ]
            tag_on_failure => [ "_grok_postfix_dnsblog_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/local$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_LOCAL}" ]
            tag_on_failure => [ "_grok_postfix_local_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/master$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_MASTER}" ]
            tag_on_failure => [ "_grok_postfix_master_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/pickup$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_PICKUP}" ]
            tag_on_failure => [ "_grok_postfix_pickup_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/pipe$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_PIPE}" ]
            tag_on_failure => [ "_grok_postfix_pipe_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/postdrop$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_POSTDROP}" ]
            tag_on_failure => [ "_grok_postfix_postdrop_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/postscreen$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_POSTSCREEN}" ]
            tag_on_failure => [ "_grok_postfix_postscreen_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/qmgr$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_QMGR}" ]
            tag_on_failure => [ "_grok_postfix_qmgr_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/scache$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_SCACHE}" ]
            tag_on_failure => [ "_grok_postfix_scache_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/sendmail$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_SENDMAIL}" ]
            tag_on_failure => [ "_grok_postfix_sendmail_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/smtp$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_SMTP}" ]
            tag_on_failure => [ "_grok_postfix_smtp_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/lmtp$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_LMTP}" ]
            tag_on_failure => [ "_grok_postfix_lmtp_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/smtpd$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_SMTPD}" ]
            tag_on_failure => [ "_grok_postfix_smtpd_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/tlsmgr$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_TLSMGR}" ]
            tag_on_failure => [ "_grok_postfix_tlsmgr_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/tlsproxy$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_TLSPROXY}" ]
            tag_on_failure => [ "_grok_postfix_tlsproxy_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/trivial-rewrite$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_TRIVIAL_REWRITE}" ]
            tag_on_failure => [ "_grok_postfix_trivial_rewrite_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/discard$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_DISCARD}" ]
            tag_on_failure => [ "_grok_postfix_discard_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*\/virtual$/ {
        grok {
            match          => [ "syslogmessage", "%{POSTFIX_VIRTUAL}" ]
            tag_on_failure => [ "_grok_postfix_virtual_nomatch" ]
            add_tag        => [ "mail" ]
        }
    } else if [program] =~ /^postfix.*/ {
        mutate {
            add_tag => [ "_grok_postfix_program_nomatch", "mail" ]
        }
    }

    # process key-value data is it exists
    if [postfix_keyvalue_data] {
        kv {
            source       => "postfix_keyvalue_data"
            trim_value   => "<>,"
            prefix       => "postfix_"
            remove_field => [ "postfix_keyvalue_data" ]
        }

        # some post processing of key-value data
        if [postfix_client] {
            grok {
                match          => ["postfix_client", "%{POSTFIX_CLIENT_INFO}"]
                tag_on_failure => [ "_grok_kv_postfix_client_nomatch" ]
                remove_field   => [ "postfix_client" ]
            }
        }
        if [postfix_relay] {
            grok {
                match          => ["postfix_relay", "%{POSTFIX_RELAY_INFO}"]
                tag_on_failure => [ "_grok_kv_postfix_relay_nomatch" ]
                remove_field   => [ "postfix_relay" ]
            }
        }
        if [postfix_delays] {
            grok {
                match          => ["postfix_delays", "%{POSTFIX_DELAYS}"]
                tag_on_failure => [ "_grok_kv_postfix_delays_nomatch" ]
                remove_field   => [ "postfix_delays" ]
            }
        }
    }
	#cleanup of field postfix_status_message, here we get rid of the IP that comes with the field, so elasticsearch is able to aggregate all the events
	grok
	{
		match => ["postfix_status_message","%{DATA:temp}(;|,)"]
		tag_on_failure => []
	}
	
	if[temp]
	{
		mutate
		{
			update => { "postfix_status_message" => "%{temp}"}
			remove_field => ["temp"]
		}
	}

	#get username from @domain*
	if[postfix_to]
	{
		grok{
			match => ["postfix_to","%{DATA:user}@"]
		}
	}
	# get sender domain from *@domain
	if[postfix_from]
	{
		grok{
			match => ["postfix_from","@%{GREEDYDATA:sender_domain}"]
			tag_on_failure => [ "" ]
		}
	}

    if "mail" in [tags]
    {
    	# Do some data type conversions
    	mutate {
		rename => { "postfix_from" => "sender" }
		replace => { "type" => "postfix" }
        	convert => [
            	# list of integer fields
            	"postfix_anvil_cache_size", "integer",
            	"postfix_anvil_conn_count", "integer",
            	"postfix_anvil_conn_rate", "integer",
            	"postfix_client_port", "integer",
            	"postfix_nrcpt", "integer",
            	"postfix_postscreen_cache_dropped", "integer",
            	"postfix_postscreen_cache_retained", "integer",
            	"postfix_postscreen_dnsbl_rank", "integer",
            	"postfix_relay_port", "integer",
            	"postfix_server_port", "integer",
            	"postfix_size", "integer",
            	"postfix_status_code", "integer",
            	"postfix_termination_signal", "integer",
            	"postfix_uid", "integer",

           	 # list of float fields
            	"postfix_delay", "float",
           	 "postfix_delay_before_qmgr", "float",
           	 "postfix_delay_conn_setup", "float",
            	"postfix_delay_in_qmgr", "float",
            	"postfix_delay_transmission", "float",
         	"postfix_postscreen_violation_time", "float"
        ]
    }
    #Converting delay from ms to seconds so we can better visualize on Kibana
   	if [postfix_delay]
        {
           ruby{ code => 'event.set("postfix_delay",event.get("postfix_delay")/1000.0)' }
        }	
}
}

