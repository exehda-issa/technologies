filter {
	if [type] == "winst" {
                grok
                {
                        match => ["message","%{WINSTAUTH}"]
			add_field => {"task_id"=>"%{src_ip}_%{host}"}
                }
		if [agent] != "-" and [agent] != "" {
                       useragent {
                            source => "agent"
                            prefix => "agent-"
                  	}
                }

		date {
                        match => ["timestamp","MMM dd HH:mm:ss"]
                }
                aggregate
                {
                        task_id => "%{task_id}"
                        code => "map['ap'] = event.get('ap')
				 map['cpf'] = event.get('cpf')"
                        map_action => "create_or_update"
			# The path to file where aggregate maps are stored when logstash stops and are loaded from when logstash starts. If not defined, aggregate maps will not be stored at logstash stop and will be lost.
			aggregate_maps_path => "/usr/share/logstash/data/.aggregate_maps"
                }
		mutate {
                        remove_field => ["message","offset","timestamp","input_type","agent-build","agent-major","agent-minor","agent-os_major","agent-os_minor","agent-patch"]
                }

        } else if [type] == "winst_error" {
		grok {
                        match => ["message","%{WINSTERROR}"]
                        add_field => {"task_id"=>"%{src_ip}_%{host}"}
                }

                date { match => ["timestamp","MMM dd HH:mm:ss"] }

	}
}
