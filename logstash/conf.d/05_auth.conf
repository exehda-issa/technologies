filter
{
	if[type] == "auth"
	{
		grok
		{
			match => ["message","%{SYSLOGBASE} %{GREEDYDATA:authmessage}"]
		}
		if[program] == "sshd"
		{							
			grok
			{
				match => ["authmessage","Disconnecting: Too many authentication failures for %{USERNAME:user} from %{IP:src_ip} port %{POSINT:port} %{GREEDYDATA}"]
				add_tag => "ssh_brute_force_attack"
				tag_on_failure => []
				break_on_match => true
			}
			grok
			{
				match => ["authmessage","pam_unix\(sshd:auth\): authentication failure; logname=%{USERNAME:logname} uid=%{BASE10NUM:uid} euid=%{BASE10NUM:euid} tty=%{TTY:tty} ruser=%{USERNAME:ruser} rhost=(?:%{HOSTNAME:remote_host}|\s*) user=%{USERNAME:user}"]
				add_tag => "sudo_auth_failure"
				tag_on_failure => []
				break_on_match => true
			}
			grok
			{
				match => ["authmessage","Failed password for %{USERNAME:user} from %{IP:src_ip} port %{POSINT:port} ssh2"]
                       		add_tag => "ssh_failed_login"
                       		tag_on_failure => []
                       	 	break_on_match => true
			}
			grok
			{
				match => ["authmessage","Accepted password for %{USERNAME:user} from %{IP:src_ip} port %{POSINT:port} ssh2"]
                        	add_tag => "ssh_successful_login"
                        	tag_on_failure => []
                        	break_on_match => true
			}
			grok
			{
				match => ["authmessage","pam_ldap: %{GREEDYDATA:pam_message}"]
				add_tag => "pam_message"
				tag_on_failure => []
				break_on_match => true
			}
		
			date
			{	
 				match => ["timestamp", "MMM  d HH:mm:ss","MMM dd HH:mm:ss"]
			}
	
			mutate
			{	 
				remove_field => ["authmessage"]
			}
		}
		
	}
	
}
